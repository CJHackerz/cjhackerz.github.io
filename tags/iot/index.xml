<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT on Chirag Jariwala</title>
    <link>https://cjhackerz.net/tags/iot/</link>
    <description>Recent content in IoT on Chirag Jariwala</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cjhackerz.net/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reading data from EEPROM without desoldering</title>
      <link>https://cjhackerz.net/posts/reading-firmware-from-eeprom-easyway/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cjhackerz.net/posts/reading-firmware-from-eeprom-easyway/</guid>
      <description>Introduction In IoT/Hardware security it is common practice of dumping firmware/bootloader data inorder to perform reverse engineering for closed source system applications.
Well known easiest way is to download .bin/.zip (packed firmware) files from device manufacturer&amp;rsquo;s website which they provide to end users for firmware upgrade operations. And later us hackers/security researchers throw these files to reverse engineering softwares such as binwalk to check it&amp;rsquo;s contents and extract the needed stuff.</description>
    </item>
    
    <item>
      <title>UART using Bus Pirate</title>
      <link>https://cjhackerz.net/posts/uart-buspirate/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cjhackerz.net/posts/uart-buspirate/</guid>
      <description>Introduction UART stands for Universal Asynchronous Receiver/Transmitter. It&amp;rsquo;s not a communication protocol like SPI and I2C, but rather a physical circuit which transmits and receives serial data.
UART transmit data asynchronously, which means there is no clock signal to synchronize the output of bits from the transmitting UART to the sampling of bits by the receiving UART. Instead of a clock signal, the transmitting UART adds start and stop bits to the data packet being transferred.</description>
    </item>
    
    <item>
      <title>Mqtt pwn</title>
      <link>https://cjhackerz.net/posts/mqtt-pwn/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cjhackerz.net/posts/mqtt-pwn/</guid>
      <description>Previously I was working on university minor project (IPS system for IoT devices). So, I have picked up CVE-2017-7650 to define snort rule for it. I was thinking how someone can leverage this silly vulnerability and I asked my self in current IoT space what kind of data can compromise user&amp;rsquo;s privacy. Yes, it is GPS data. I am big fan of Python programming and wanted to use it&amp;rsquo;s power, so I wrote to small python scripts which gathers list of IP addresses from Shodan API, tries to connect on those IPs as MQTT client.</description>
    </item>
    
  </channel>
</rss>